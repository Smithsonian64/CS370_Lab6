State 118 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls_list

    2 decls_list: dec
    3           | dec decls_list

    4 dec: var_dec
    5    | fun_dec

    6 var_dec: type_spec var_list ';'

    7 var_list: ID
    8         | ID '[' NUM ']'
    9         | ID ',' var_list
   10         | ID '[' NUM ']' ',' var_list

   11 type_spec: INT
   12          | VOID
   13          | BOOLEAN

   14 fun_dec: type_spec ID '(' params ')' compound_stmt

   15 params: VOID
   16       | param_list

   17 param_list: param
   18           | param ',' param_list

   19 param: type_spec ID
   20      | type_spec ID '[' ']'

   21 compound_stmt: BEG local_decs stmt_list END

   22 local_decs: %empty
   23           | var_dec local_decs

   24 stmt_list: %empty
   25          | stmt stmt_list

   26 stmt: expression_stmt
   27     | compound_stmt
   28     | selection_stmt
   29     | iteration_stmt
   30     | assignment_stmt
   31     | return_stmt
   32     | read_stmt
   33     | write_stmt

   34 expression_stmt: expression ';'
   35                | ';'

   36 selection_stmt: IF expression THEN stmt
   37               | IF expression THEN stmt ELSE stmt

   38 iteration_stmt: WHILE expression DO stmt

   39 return_stmt: RET ';'
   40            | RET expression ';'

   41 read_stmt: READ variable ';'

   42 write_stmt: WRITE expression ';'

   43 assignment_stmt: variable '=' simple_expression ';'

   44 expression: simple_expression

   45 variable: ID
   46         | ID '[' expression ']'

   47 simple_expression: additive_expression
   48                  | additive_expression relop additive_expression

   49 relop: LE
   50      | LT
   51      | GT
   52      | GE
   53      | EQ
   54      | NE

   55 additive_expression: term
   56                    | term addop additive_expression

   57 addop: '+'
   58      | '-'

   59 term: factor
   60     | term multop factor

   61 multop: '*'
   62       | '/'
   63       | AND
   64       | OR

   65 factor: '(' expression ')'
   66       | NUM
   67       | variable
   68       | call
   69       | TRUE
   70       | FALSE
   71       | NOT factor

   72 call: ID '(' args ')'

   73 args: arg_list
   74     | %empty

   75 arg_list: expression
   76         | expression ',' arg_list


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 14 65 72
    ')' (41) 14 65 72
    '*' (42) 61
    '+' (43) 57
    ',' (44) 9 10 18 76
    '-' (45) 58
    '/' (47) 62
    ';' (59) 6 34 35 39 40 41 42 43
    '=' (61) 43
    '[' (91) 8 10 20 46
    ']' (93) 8 10 20 46
    error (256)
    ID <string> (258) 7 8 9 10 14 19 20 45 46 72
    NUM <value> (259) 8 10 66
    INT (260) 11
    VOID (261) 12 15
    BOOLEAN (262) 13
    BEG (263) 21
    END (264) 21
    IF (265) 36 37
    THEN (266) 36 37
    ELSE (267) 37
    WHILE (268) 38
    DO (269) 38
    RET (270) 39 40
    READ (271) 41
    WRITE (272) 42
    LE (273) 49
    LT (274) 50
    GE (275) 52
    GT (276) 51
    EQ (277) 53
    NE (278) 54
    AND (279) 63
    OR (280) 64
    TRUE (281) 69
    FALSE (282) 70
    NOT (283) 71


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program <node> (41)
        on left: 1
        on right: 0
    decls_list <node> (42)
        on left: 2 3
        on right: 1 3
    dec <node> (43)
        on left: 4 5
        on right: 2 3
    var_dec <node> (44)
        on left: 6
        on right: 4 23
    var_list <node> (45)
        on left: 7 8 9 10
        on right: 6 9 10
    type_spec <operator> (46)
        on left: 11 12 13
        on right: 6 14 19 20
    fun_dec <node> (47)
        on left: 14
        on right: 5
    params <node> (48)
        on left: 15 16
        on right: 14
    param_list <node> (49)
        on left: 17 18
        on right: 16 18
    param <node> (50)
        on left: 19 20
        on right: 17 18
    compound_stmt <node> (51)
        on left: 21
        on right: 14 27
    local_decs <node> (52)
        on left: 22 23
        on right: 21 23
    stmt_list <node> (53)
        on left: 24 25
        on right: 21 25
    stmt <node> (54)
        on left: 26 27 28 29 30 31 32 33
        on right: 25 36 37 38
    expression_stmt <node> (55)
        on left: 34 35
        on right: 26
    selection_stmt <node> (56)
        on left: 36 37
        on right: 28
    iteration_stmt <node> (57)
        on left: 38
        on right: 29
    return_stmt <node> (58)
        on left: 39 40
        on right: 31
    read_stmt <node> (59)
        on left: 41
        on right: 32
    write_stmt <node> (60)
        on left: 42
        on right: 33
    assignment_stmt <node> (61)
        on left: 43
        on right: 30
    expression <node> (62)
        on left: 44
        on right: 34 36 37 38 40 42 46 65 75 76
    variable <node> (63)
        on left: 45 46
        on right: 41 43 67
    simple_expression <node> (64)
        on left: 47 48
        on right: 43 44
    relop <operator> (65)
        on left: 49 50 51 52 53 54
        on right: 48
    additive_expression <node> (66)
        on left: 55 56
        on right: 47 48 56
    addop <operator> (67)
        on left: 57 58
        on right: 56
    term <node> (68)
        on left: 59 60
        on right: 55 56 60
    multop <operator> (69)
        on left: 61 62 63 64
        on right: 60
    factor <node> (70)
        on left: 65 66 67 68 69 70 71
        on right: 59 60 71
    call <node> (71)
        on left: 72
        on right: 68
    args <node> (72)
        on left: 73 74
        on right: 72
    arg_list <node> (73)
        on left: 75 76
        on right: 73 76


State 0

    0 $accept: . program $end

    INT      shift, and go to state 1
    VOID     shift, and go to state 2
    BOOLEAN  shift, and go to state 3

    program     go to state 4
    decls_list  go to state 5
    dec         go to state 6
    var_dec     go to state 7
    type_spec   go to state 8
    fun_dec     go to state 9


State 1

   11 type_spec: INT .

    $default  reduce using rule 11 (type_spec)


State 2

   12 type_spec: VOID .

    $default  reduce using rule 12 (type_spec)


State 3

   13 type_spec: BOOLEAN .

    $default  reduce using rule 13 (type_spec)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 10


State 5

    1 program: decls_list .

    $default  reduce using rule 1 (program)


State 6

    2 decls_list: dec .
    3           | dec . decls_list

    INT      shift, and go to state 1
    VOID     shift, and go to state 2
    BOOLEAN  shift, and go to state 3

    $default  reduce using rule 2 (decls_list)

    decls_list  go to state 11
    dec         go to state 6
    var_dec     go to state 7
    type_spec   go to state 8
    fun_dec     go to state 9


State 7

    4 dec: var_dec .

    $default  reduce using rule 4 (dec)


State 8

    6 var_dec: type_spec . var_list ';'
   14 fun_dec: type_spec . ID '(' params ')' compound_stmt

    ID  shift, and go to state 12

    var_list  go to state 13


State 9

    5 dec: fun_dec .

    $default  reduce using rule 5 (dec)


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 decls_list: dec decls_list .

    $default  reduce using rule 3 (decls_list)


State 12

    7 var_list: ID .
    8         | ID . '[' NUM ']'
    9         | ID . ',' var_list
   10         | ID . '[' NUM ']' ',' var_list
   14 fun_dec: type_spec ID . '(' params ')' compound_stmt

    '['  shift, and go to state 14
    ','  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 7 (var_list)


State 13

    6 var_dec: type_spec var_list . ';'

    ';'  shift, and go to state 17


State 14

    8 var_list: ID '[' . NUM ']'
   10         | ID '[' . NUM ']' ',' var_list

    NUM  shift, and go to state 18


State 15

    9 var_list: ID ',' . var_list

    ID  shift, and go to state 19

    var_list  go to state 20


State 16

   14 fun_dec: type_spec ID '(' . params ')' compound_stmt

    INT      shift, and go to state 1
    VOID     shift, and go to state 21
    BOOLEAN  shift, and go to state 3

    type_spec   go to state 22
    params      go to state 23
    param_list  go to state 24
    param       go to state 25


State 17

    6 var_dec: type_spec var_list ';' .

    $default  reduce using rule 6 (var_dec)


State 18

    8 var_list: ID '[' NUM . ']'
   10         | ID '[' NUM . ']' ',' var_list

    ']'  shift, and go to state 26


State 19

    7 var_list: ID .
    8         | ID . '[' NUM ']'
    9         | ID . ',' var_list
   10         | ID . '[' NUM ']' ',' var_list

    '['  shift, and go to state 14
    ','  shift, and go to state 15

    $default  reduce using rule 7 (var_list)


State 20

    9 var_list: ID ',' var_list .

    $default  reduce using rule 9 (var_list)


State 21

   12 type_spec: VOID .
   15 params: VOID .

    ')'       reduce using rule 15 (params)
    $default  reduce using rule 12 (type_spec)


State 22

   19 param: type_spec . ID
   20      | type_spec . ID '[' ']'

    ID  shift, and go to state 27


State 23

   14 fun_dec: type_spec ID '(' params . ')' compound_stmt

    ')'  shift, and go to state 28


State 24

   16 params: param_list .

    $default  reduce using rule 16 (params)


State 25

   17 param_list: param .
   18           | param . ',' param_list

    ','  shift, and go to state 29

    $default  reduce using rule 17 (param_list)


State 26

    8 var_list: ID '[' NUM ']' .
   10         | ID '[' NUM ']' . ',' var_list

    ','  shift, and go to state 30

    $default  reduce using rule 8 (var_list)


State 27

   19 param: type_spec ID .
   20      | type_spec ID . '[' ']'

    '['  shift, and go to state 31

    $default  reduce using rule 19 (param)


State 28

   14 fun_dec: type_spec ID '(' params ')' . compound_stmt

    BEG  shift, and go to state 32

    compound_stmt  go to state 33


State 29

   18 param_list: param ',' . param_list

    INT      shift, and go to state 1
    VOID     shift, and go to state 2
    BOOLEAN  shift, and go to state 3

    type_spec   go to state 22
    param_list  go to state 34
    param       go to state 25


State 30

   10 var_list: ID '[' NUM ']' ',' . var_list

    ID  shift, and go to state 19

    var_list  go to state 35


State 31

   20 param: type_spec ID '[' . ']'

    ']'  shift, and go to state 36


State 32

   21 compound_stmt: BEG . local_decs stmt_list END

    INT      shift, and go to state 1
    VOID     shift, and go to state 2
    BOOLEAN  shift, and go to state 3

    $default  reduce using rule 22 (local_decs)

    var_dec     go to state 37
    type_spec   go to state 38
    local_decs  go to state 39


State 33

   14 fun_dec: type_spec ID '(' params ')' compound_stmt .

    $default  reduce using rule 14 (fun_dec)


State 34

   18 param_list: param ',' param_list .

    $default  reduce using rule 18 (param_list)


State 35

   10 var_list: ID '[' NUM ']' ',' var_list .

    $default  reduce using rule 10 (var_list)


State 36

   20 param: type_spec ID '[' ']' .

    $default  reduce using rule 20 (param)


State 37

   23 local_decs: var_dec . local_decs

    INT      shift, and go to state 1
    VOID     shift, and go to state 2
    BOOLEAN  shift, and go to state 3

    $default  reduce using rule 22 (local_decs)

    var_dec     go to state 37
    type_spec   go to state 38
    local_decs  go to state 40


State 38

    6 var_dec: type_spec . var_list ';'

    ID  shift, and go to state 19

    var_list  go to state 13


State 39

   21 compound_stmt: BEG local_decs . stmt_list END

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    BEG    shift, and go to state 32
    IF     shift, and go to state 43
    WHILE  shift, and go to state 44
    RET    shift, and go to state 45
    READ   shift, and go to state 46
    WRITE  shift, and go to state 47
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    ';'    shift, and go to state 51
    '('    shift, and go to state 52

    $default  reduce using rule 24 (stmt_list)

    compound_stmt        go to state 53
    stmt_list            go to state 54
    stmt                 go to state 55
    expression_stmt      go to state 56
    selection_stmt       go to state 57
    iteration_stmt       go to state 58
    return_stmt          go to state 59
    read_stmt            go to state 60
    write_stmt           go to state 61
    assignment_stmt      go to state 62
    expression           go to state 63
    variable             go to state 64
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 40

   23 local_decs: var_dec local_decs .

    $default  reduce using rule 23 (local_decs)


State 41

   45 variable: ID .
   46         | ID . '[' expression ']'
   72 call: ID . '(' args ')'

    '['  shift, and go to state 70
    '('  shift, and go to state 71

    $default  reduce using rule 45 (variable)


State 42

   66 factor: NUM .

    $default  reduce using rule 66 (factor)


State 43

   36 selection_stmt: IF . expression THEN stmt
   37               | IF . expression THEN stmt ELSE stmt

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    expression           go to state 72
    variable             go to state 73
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 44

   38 iteration_stmt: WHILE . expression DO stmt

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    expression           go to state 74
    variable             go to state 73
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 45

   39 return_stmt: RET . ';'
   40            | RET . expression ';'

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    ';'    shift, and go to state 75
    '('    shift, and go to state 52

    expression           go to state 76
    variable             go to state 73
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 46

   41 read_stmt: READ . variable ';'

    ID  shift, and go to state 77

    variable  go to state 78


State 47

   42 write_stmt: WRITE . expression ';'

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    expression           go to state 79
    variable             go to state 73
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 48

   69 factor: TRUE .

    $default  reduce using rule 69 (factor)


State 49

   70 factor: FALSE .

    $default  reduce using rule 70 (factor)


State 50

   71 factor: NOT . factor

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    variable  go to state 73
    factor    go to state 80
    call      go to state 69


State 51

   35 expression_stmt: ';' .

    $default  reduce using rule 35 (expression_stmt)


State 52

   65 factor: '(' . expression ')'

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    expression           go to state 81
    variable             go to state 73
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 53

   27 stmt: compound_stmt .

    $default  reduce using rule 27 (stmt)


State 54

   21 compound_stmt: BEG local_decs stmt_list . END

    END  shift, and go to state 82


State 55

   25 stmt_list: stmt . stmt_list

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    BEG    shift, and go to state 32
    IF     shift, and go to state 43
    WHILE  shift, and go to state 44
    RET    shift, and go to state 45
    READ   shift, and go to state 46
    WRITE  shift, and go to state 47
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    ';'    shift, and go to state 51
    '('    shift, and go to state 52

    $default  reduce using rule 24 (stmt_list)

    compound_stmt        go to state 53
    stmt_list            go to state 83
    stmt                 go to state 55
    expression_stmt      go to state 56
    selection_stmt       go to state 57
    iteration_stmt       go to state 58
    return_stmt          go to state 59
    read_stmt            go to state 60
    write_stmt           go to state 61
    assignment_stmt      go to state 62
    expression           go to state 63
    variable             go to state 64
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 56

   26 stmt: expression_stmt .

    $default  reduce using rule 26 (stmt)


State 57

   28 stmt: selection_stmt .

    $default  reduce using rule 28 (stmt)


State 58

   29 stmt: iteration_stmt .

    $default  reduce using rule 29 (stmt)


State 59

   31 stmt: return_stmt .

    $default  reduce using rule 31 (stmt)


State 60

   32 stmt: read_stmt .

    $default  reduce using rule 32 (stmt)


State 61

   33 stmt: write_stmt .

    $default  reduce using rule 33 (stmt)


State 62

   30 stmt: assignment_stmt .

    $default  reduce using rule 30 (stmt)


State 63

   34 expression_stmt: expression . ';'

    ';'  shift, and go to state 84


State 64

   43 assignment_stmt: variable . '=' simple_expression ';'
   67 factor: variable .

    '='  shift, and go to state 85

    $default  reduce using rule 67 (factor)


State 65

   44 expression: simple_expression .

    $default  reduce using rule 44 (expression)


State 66

   47 simple_expression: additive_expression .
   48                  | additive_expression . relop additive_expression

    LE  shift, and go to state 86
    LT  shift, and go to state 87
    GE  shift, and go to state 88
    GT  shift, and go to state 89
    EQ  shift, and go to state 90
    NE  shift, and go to state 91

    $default  reduce using rule 47 (simple_expression)

    relop  go to state 92


State 67

   55 additive_expression: term .
   56                    | term . addop additive_expression
   60 term: term . multop factor

    AND  shift, and go to state 93
    OR   shift, and go to state 94
    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '*'  shift, and go to state 97
    '/'  shift, and go to state 98

    $default  reduce using rule 55 (additive_expression)

    addop   go to state 99
    multop  go to state 100


State 68

   59 term: factor .

    $default  reduce using rule 59 (term)


State 69

   68 factor: call .

    $default  reduce using rule 68 (factor)


State 70

   46 variable: ID '[' . expression ']'

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    expression           go to state 101
    variable             go to state 73
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 71

   72 call: ID '(' . args ')'

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    $default  reduce using rule 74 (args)

    expression           go to state 102
    variable             go to state 73
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69
    args                 go to state 103
    arg_list             go to state 104


State 72

   36 selection_stmt: IF expression . THEN stmt
   37               | IF expression . THEN stmt ELSE stmt

    THEN  shift, and go to state 105


State 73

   67 factor: variable .

    $default  reduce using rule 67 (factor)


State 74

   38 iteration_stmt: WHILE expression . DO stmt

    DO  shift, and go to state 106


State 75

   39 return_stmt: RET ';' .

    $default  reduce using rule 39 (return_stmt)


State 76

   40 return_stmt: RET expression . ';'

    ';'  shift, and go to state 107


State 77

   45 variable: ID .
   46         | ID . '[' expression ']'

    '['  shift, and go to state 70

    $default  reduce using rule 45 (variable)


State 78

   41 read_stmt: READ variable . ';'

    ';'  shift, and go to state 108


State 79

   42 write_stmt: WRITE expression . ';'

    ';'  shift, and go to state 109


State 80

   71 factor: NOT factor .

    $default  reduce using rule 71 (factor)


State 81

   65 factor: '(' expression . ')'

    ')'  shift, and go to state 110


State 82

   21 compound_stmt: BEG local_decs stmt_list END .

    $default  reduce using rule 21 (compound_stmt)


State 83

   25 stmt_list: stmt stmt_list .

    $default  reduce using rule 25 (stmt_list)


State 84

   34 expression_stmt: expression ';' .

    $default  reduce using rule 34 (expression_stmt)


State 85

   43 assignment_stmt: variable '=' . simple_expression ';'

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    variable             go to state 73
    simple_expression    go to state 111
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 86

   49 relop: LE .

    $default  reduce using rule 49 (relop)


State 87

   50 relop: LT .

    $default  reduce using rule 50 (relop)


State 88

   52 relop: GE .

    $default  reduce using rule 52 (relop)


State 89

   51 relop: GT .

    $default  reduce using rule 51 (relop)


State 90

   53 relop: EQ .

    $default  reduce using rule 53 (relop)


State 91

   54 relop: NE .

    $default  reduce using rule 54 (relop)


State 92

   48 simple_expression: additive_expression relop . additive_expression

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    variable             go to state 73
    additive_expression  go to state 112
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 93

   63 multop: AND .

    $default  reduce using rule 63 (multop)


State 94

   64 multop: OR .

    $default  reduce using rule 64 (multop)


State 95

   57 addop: '+' .

    $default  reduce using rule 57 (addop)


State 96

   58 addop: '-' .

    $default  reduce using rule 58 (addop)


State 97

   61 multop: '*' .

    $default  reduce using rule 61 (multop)


State 98

   62 multop: '/' .

    $default  reduce using rule 62 (multop)


State 99

   56 additive_expression: term addop . additive_expression

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    variable             go to state 73
    additive_expression  go to state 113
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 100

   60 term: term multop . factor

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    variable  go to state 73
    factor    go to state 114
    call      go to state 69


State 101

   46 variable: ID '[' expression . ']'

    ']'  shift, and go to state 115


State 102

   75 arg_list: expression .
   76         | expression . ',' arg_list

    ','  shift, and go to state 116

    $default  reduce using rule 75 (arg_list)


State 103

   72 call: ID '(' args . ')'

    ')'  shift, and go to state 117


State 104

   73 args: arg_list .

    $default  reduce using rule 73 (args)


State 105

   36 selection_stmt: IF expression THEN . stmt
   37               | IF expression THEN . stmt ELSE stmt

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    BEG    shift, and go to state 32
    IF     shift, and go to state 43
    WHILE  shift, and go to state 44
    RET    shift, and go to state 45
    READ   shift, and go to state 46
    WRITE  shift, and go to state 47
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    ';'    shift, and go to state 51
    '('    shift, and go to state 52

    compound_stmt        go to state 53
    stmt                 go to state 118
    expression_stmt      go to state 56
    selection_stmt       go to state 57
    iteration_stmt       go to state 58
    return_stmt          go to state 59
    read_stmt            go to state 60
    write_stmt           go to state 61
    assignment_stmt      go to state 62
    expression           go to state 63
    variable             go to state 64
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 106

   38 iteration_stmt: WHILE expression DO . stmt

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    BEG    shift, and go to state 32
    IF     shift, and go to state 43
    WHILE  shift, and go to state 44
    RET    shift, and go to state 45
    READ   shift, and go to state 46
    WRITE  shift, and go to state 47
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    ';'    shift, and go to state 51
    '('    shift, and go to state 52

    compound_stmt        go to state 53
    stmt                 go to state 119
    expression_stmt      go to state 56
    selection_stmt       go to state 57
    iteration_stmt       go to state 58
    return_stmt          go to state 59
    read_stmt            go to state 60
    write_stmt           go to state 61
    assignment_stmt      go to state 62
    expression           go to state 63
    variable             go to state 64
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 107

   40 return_stmt: RET expression ';' .

    $default  reduce using rule 40 (return_stmt)


State 108

   41 read_stmt: READ variable ';' .

    $default  reduce using rule 41 (read_stmt)


State 109

   42 write_stmt: WRITE expression ';' .

    $default  reduce using rule 42 (write_stmt)


State 110

   65 factor: '(' expression ')' .

    $default  reduce using rule 65 (factor)


State 111

   43 assignment_stmt: variable '=' simple_expression . ';'

    ';'  shift, and go to state 120


State 112

   48 simple_expression: additive_expression relop additive_expression .

    $default  reduce using rule 48 (simple_expression)


State 113

   56 additive_expression: term addop additive_expression .

    $default  reduce using rule 56 (additive_expression)


State 114

   60 term: term multop factor .

    $default  reduce using rule 60 (term)


State 115

   46 variable: ID '[' expression ']' .

    $default  reduce using rule 46 (variable)


State 116

   76 arg_list: expression ',' . arg_list

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    '('    shift, and go to state 52

    expression           go to state 102
    variable             go to state 73
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69
    arg_list             go to state 121


State 117

   72 call: ID '(' args ')' .

    $default  reduce using rule 72 (call)


State 118

   36 selection_stmt: IF expression THEN stmt .
   37               | IF expression THEN stmt . ELSE stmt

    ELSE  shift, and go to state 122

    ELSE      [reduce using rule 36 (selection_stmt)]
    $default  reduce using rule 36 (selection_stmt)


State 119

   38 iteration_stmt: WHILE expression DO stmt .

    $default  reduce using rule 38 (iteration_stmt)


State 120

   43 assignment_stmt: variable '=' simple_expression ';' .

    $default  reduce using rule 43 (assignment_stmt)


State 121

   76 arg_list: expression ',' arg_list .

    $default  reduce using rule 76 (arg_list)


State 122

   37 selection_stmt: IF expression THEN stmt ELSE . stmt

    ID     shift, and go to state 41
    NUM    shift, and go to state 42
    BEG    shift, and go to state 32
    IF     shift, and go to state 43
    WHILE  shift, and go to state 44
    RET    shift, and go to state 45
    READ   shift, and go to state 46
    WRITE  shift, and go to state 47
    TRUE   shift, and go to state 48
    FALSE  shift, and go to state 49
    NOT    shift, and go to state 50
    ';'    shift, and go to state 51
    '('    shift, and go to state 52

    compound_stmt        go to state 53
    stmt                 go to state 123
    expression_stmt      go to state 56
    selection_stmt       go to state 57
    iteration_stmt       go to state 58
    return_stmt          go to state 59
    read_stmt            go to state 60
    write_stmt           go to state 61
    assignment_stmt      go to state 62
    expression           go to state 63
    variable             go to state 64
    simple_expression    go to state 65
    additive_expression  go to state 66
    term                 go to state 67
    factor               go to state 68
    call                 go to state 69


State 123

   37 selection_stmt: IF expression THEN stmt ELSE stmt .

    $default  reduce using rule 37 (selection_stmt)
